import tkinter as tk
from tkinter import filedialog
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import spectrogram

class SignalProcessingApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Phần mềm Xử lý Tín hiệu Số")

        # Tạo thanh menu
        menu_bar = tk.Menu(self.root)
        self.root.config(menu=menu_bar)

        file_menu = tk.Menu(menu_bar, tearoff=0)
        menu_bar.add_cascade(label="File", menu=file_menu)
        file_menu.add_command(label="Mở Tệp", command=self.open_file)

        # Tạo các thành phần GUI
        self.file_path_label = tk.Label(root, text="Đường dẫn tệp:")
        self.file_path_label.pack()

        self.process_button = tk.Button(root, text="Xử lý Tín hiệu", command=self.process_signal)
        self.process_button.pack()

    def open_file(self):
        file_path = filedialog.askopenfilename(filetypes=[("Wave files", "*.wav")])
        self.file_path_label.config(text=f"Đường dẫn tệp: {file_path}")
        self.signal_data, self.sampling_rate = self.read_wave_file(file_path)

    def read_wave_file(self, file_path):
        # Đọc dữ liệu từ tệp âm thanh
        # Trong ví dụ này, sử dụng numpy để đọc tệp âm thanh, bạn có thể thay thế phương thức đọc tệp của mình dựa trên định dạng tệp âm thanh thực tế
        # Đối với định dạng WAV, bạn có thể sử dụng thư viện scipy hoặc wave trong Python
        signal_data, sampling_rate = np.random.rand(44100), 44100  # Mô phỏng dữ liệu âm thanh ngẫu nhiên
        return signal_data, sampling_rate

    def process_signal(self):
        if hasattr(self, 'signal_data'):
            # Xử lý tín hiệu ở đây
            # Trong ví dụ này, tạo một biểu đồ dải tần số của tín hiệu
            f, t, Sxx = spectrogram(self.signal_data, self.sampling_rate)
            plt.pcolormesh(t, f, 10 * np.log10(Sxx), shading='auto')
            plt.ylabel('Frequency [Hz]')
            plt.xlabel('Time [sec]')
            plt.title('Spectrogram')
            plt.show()
        else:
            print("Vui lòng chọn một tệp âm thanh trước khi xử lý tín hiệu.")

if __name__ == "__main__":
    root = tk.Tk()
    app = SignalProcessingApp(root)
    root.mainloop()
